services:
    backend:
        container_name: authentication_backend
        build:
            context: ./src/backend
            dockerfile: Dockerfile
        command: sh -c 'python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --timeout 90 --reload --bind 0.0.0.0:8000 --workers 8 config.wsgi'
        volumes:
            - pages_volume:/home/src/frontend/pages
        expose:
            - '8000'
        env_file:
            - setup/.env
        depends_on:
            - db
        restart: always
    db:
        container_name: authentication_db
        image: postgres:16
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - setup/.env
        expose:
            - '5432'
        restart: always
    worker:
        container_name: authentication_worker
        build:
            context: ./src/backend
            dockerfile: Dockerfile
        command: celery -A config worker -l info
        env_file:
            - setup/.env
        depends_on:
            - redis
    celery-beat:
        container_name: authentication_celery_beat
        build:
            context: ./src/backend
            dockerfile: Dockerfile
        command: celery -A config beat -l info
        volumes:
            - ./src/backend:/app/
        env_file:
            - setup/.env
        depends_on:
            - redis
        restart: always
    redis:
        container_name: authentication_redis
        image: redis:7.2 
        expose:
            - '6379'
    nginx:
        container_name: authentication_nginx
        build:
            context: ./nginx
            dockerfile: Dockerfile
        volumes:
            - static_volume:/home/src/frontend/static
            - media_volume:/home/src/frontend/media
        ports:
            - '80:80'
        expose:
            - '80'
        depends_on:
            - backend
volumes:
    postgres_data:
    static_volume:
        name: authentication_static_volume
    media_volume:
        name: authentication_media_volume
    pages_volume:
        name: authentication_pages_volume
